name: Deploy
on: push
jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    if: |
      "!contains(github.event.head_commit.message, '[skip]')" ||
      "contains(github.event.head_commit.message, '[Deploy]')" ||
      "github.ref == 'refs/heads/master'"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: eve0415
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: eve0415/minecraft-integration:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Prepare for Deploying
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SECRET_KEY }}
          source: ".github/workflows/deploy.sh"
          target: ${{ secrets.SSH_DIR }}
          strip_components: 2
      
      - name: Deploy and clean
        uses: appleboy/ssh-action@master
        env:
          SSH_DIR: ${{ secrets.SSH_DIR }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SECRET_KEY }}
          envs: SSH_DIR
          script_stop: true
          script: |
            cd $SSH_DIR
            bash deploy.sh
            rm -rf deploy.sh
